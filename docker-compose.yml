version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c 'python manage.py migrate && python manage.py loaddata data.json && python manage.py runserver 0.0.0.0:8000'
    ports:
      - 8000:8000
    env_file:
      - .env
    networks:
      - django-net
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:14.0-alpine
    networks:
      - django-net
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user
      - POSTGRES_DB=service
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: celery --app=config worker --loglevel=info
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - django-net
    depends_on:
      - web
      - redis
  
  celerybeat:
    build: .
    command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - django-net
    depends_on:
      - web
      - redis

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - django-net

networks:
  django-net:
    driver: bridge

volumes:
  shared-volume:
  postgres_data: